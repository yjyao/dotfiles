[alias]

  aliases = config --get-regexp '^alias'
  rc = !vim ~/.gitconfig

  st = status -sb

  a  = add
  aa = add --all
  amend = commit --amend
  ap = add --patch
  au = add --update
  unstage = reset HEAD --

  ci = commit
  cm = commit -m

  co = checkout
  cob = checkout -b
  track = checkout --track

  br = branch
  brclean = !git branch --merged | grep -vF '*' | xargs -n1 git branch -d
  brcurr = symbolic-ref --short HEAD
  feat = "!f() { git checkout -b feat-${1?} ${2-master} ;};f"
  fix = "!f() { git checkout -b fix-${1?} ${2-master} ;};f"
  merc = merge --no-ff
  ff = merge --ff-only

  lg = log --graph --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --perl-regexp
  mylg = !git lg --author=\"$USER\"
  lgfile = !git lg --numstat
  last = log --stat -1 HEAD

  d = diff
  dc = !git d --cached
  ds = !git d --stat

  ; Like listed by `git status` i.e., = 'fm' + 'fc' + 'fn'
  files = "!bash -c 'sort -u <(git diff --name-only --cached) <(git ls-files --others --exclude-standard --modified)'"
  filesmodified = diff --name-only  ; or 'ls-files --modified'
  filescached = diff --name-only --cached
  filesnew = ls-files --other --exclude-standard
  f = !git files
  fm = !git filesmodified
  fc = !git filescached
  fn = !git filesnew

  ss = stash push -m
  sl = stash list
  sll = stash list --stat
  sp = stash pop
  sd = "!f() { git stash drop \"stash@{$1}\" ;};f"
  sa = "!f() { git stash apply \"stash@{${1:-$(command -v fzf >/dev/null 2>&1 && git sl | fzf | sed 's/.*stash@{\\([[:digit:]]\\+\\)}.*/\\1/')}}\" ;};f"

  cp = cherry-pick

  cl = clone

  root = rev-parse --show-toplevel
  ignore = "!${EDITOR:-vi} $(git rev-parse --show-toplevel)/.gitignore"

[merge]

  tool = vimdiff

[core]

  pager = less
  hooksPath = .githooks
  quotepath = off

[push]

  default = simple

[include]

  path = ~/.gitconfig.local
