# Must be `screen*` or `tmux*`
# `tmux-256color` seems to handle colors better
set -g default-terminal "tmux-256color"

# Start window number at 1; 0 is too far from the prefix
set -g base-index 1

# Scroll back buffer size
set -g history-limit 5000

# Also display-message upon bells
# Manually trigger a bell with `tput bel` or `echo -e '\a'`
set-window-option -g visual-bell both
# Only notify bell from other windows
set-window-option -g bell-action other
# For display-message
set -g display-time 4000
# Higher profile display-message
set -g message-style 'fg=white,bright bg=blue'
# Style of window names where there is a bell
set -g window-status-bell-style 'fg=red blink'

# Open new window/pane under the current pane's directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Send the same command to all panes/windows/sessions
bind E command-prompt -p 'Command:' \
       "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
              | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Vi motions
set-window-option -g mode-keys vi
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +((\\S+\\/)?g?(view|n?vim?x?)(diff)?|sensible-editor)$'"
bind -T root C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -T root C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -T root C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -T root C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -T root 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l

# Screen cleaning
bind C-l send-keys 'C-l'

# Cut to end of line
bind C-k send-keys 'C-k'

# Search up
bind ? copy-mode \; send-keys ?

# Reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

color_off_status_fg="default"
color_off_status_bg="colour238" # gray
color_off_indicator_fg="black"
color_off_indicator_bg="colour245" # light gray

# Toggle tmux keybindings for nested tmux sessions
# https://gist.github.com/samoshkin/05e65f7f1c9b55d3fc7690b59d678734
# Press Ctrl+F9 to completely turn off tmux key bindings. Press again to turn
# back on.
bind -T root C-F9  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_off_status_fg,bg=$color_off_status_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S
bind -T off C-F9 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
wg_is_keys_off="#[fg=$color_off_indicator_fg,bg=$color_off_indicator_bg]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"
set -g status-right "$wg_is_keys_off "

bind -T off C-f switch-client -T global-keys
bind -n C-f switch-client -T global-keys

bind -T global-keys C-f send-keys 'C-f'
bind -T global-keys [ copy-mode
bind -T global-keys ] paste-buffer
bind -T global-keys ? copy-mode \; send-keys ?

# Toggle mouse control, init to off
set -g mouse off
bind C-m set -g mouse

# Enable OSC52 (gmosh currently lacks support).
set -g set-clipboard on
# Forward OSC52 sequence with a `c;` option.
set -ag terminal-overrides ",*-256col*:Ms=\\E]52;c;%p2%s\\7"

# list of plugins
set -g @plugin 'tmux-plugins/tpm'  # required

set -g @plugin 'tmux-plugins/tmux-resurrect' # saves tmux sessions
set -g @plugin 'tmux-plugins/tmux-continuum' # continuous tmux-resurrect save in background
# NOTE: requirements on `default-command`: https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_pane_contents.md
set -g @resurrect-capture-pane-contents 'on'

set -g @plugin 'laktak/extrakto'  # extract content from screen
set -g @extrakto_key 'e'
set -g @extrakto_grab_area 'window full'
set -g @extrakto_copy_key 'ctrl-y'
set -g @extrakto_insert_key 'enter'

set -g @plugin 'yjyao/tmux-picker'  # hint-based yanking (like vim-easymotion)
set -g @picker-key 'tab'

# Hint styling.
set -g @picker-hint-front 0  # Hint at the end of matches.
set -g @picker-highlight-format '#[fg=yellow]%s'
set -g @picker-unmatched-format '#[dim]%s'

# Swap lower- and upper-case actions: lower for paste, upper for copy.
set -g @picker-command 'tmux set-buffer -- "$(cat)" && tmux paste-buffer'
# TODO: Also copy to clipboard.
set -g @picker-uppercase-command "sh -c 'in=\$(mktemp) && cat > \$in && tmux set-buffer -- \"\$(cat \$in)\"'"
# set -g @picker-pattern-names " \
#       PATTERN_MULTIPART_PATH \
#       PATTERN_LONG_NUMBER \
#       PATTERN_UUID \
#       PATTERN_HEX_NUMBER \
#       PATTERN_URL \
#       PATTERN_IP_ADDR \
#       PICKER_PATTERN_GOOG_CL_URL \
#       "

set -g @plugin 'wfxr/tmux-fzf-url'  # open urls
FZF_URL_KEY='u'
FZF_URL_HISTORY_LIMIT='screen'
set -g @fzf-url-bind "$FZF_URL_KEY"
set -g @fzf-url-extra-filter "$FZF_URL_EXTRA_FILTER"
bind -T global-keys "$FZF_URL_KEY" run -b "~/.tmux/plugins/tmux-fzf-url/fzf-url.sh '$FZF_URL_EXTRA_FILTER' '$FZF_URL_HISTORY_LIMIT'";

source-file -q ~/.tmux.conf.local
source-file -q ~/.tmux/configs/*.conf

# initialize tmux plugin manager
if-shell '[ -r ~/.tmux/plugins/tpm/tpm ]' "run -b '~/.tmux/plugins/tpm/tpm'"
