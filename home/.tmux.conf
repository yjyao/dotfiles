# Start window number at 1; 0 is too far from the prefix
set -g base-index 1

# Also display-message upon bells
# Manually trigger a bell with `tput bel` or `echo -e '\a'`
set-window-option -g visual-bell both
# Only notify bell from other windows
set-window-option -g bell-action other
# For display-message
set -g display-time 4000
# Higher profile display-message
set -g message-style 'fg=white,bright bg=blue'
# Style of window names where there is a bell
set -g window-status-bell-style 'fg=red blink'

# Open new window/pane under the current pane's directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Send the same command to all panes/windows/sessions
bind E command-prompt -p 'Command:' \
       "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
              | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Vi motions
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +((\\S+\\/)?g?(view|n?vim?x?)(diff)?|sensible-editor)$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Screen cleaning
bind C-l send-keys 'C-l'

# Cut to end of line
bind C-k send-keys 'C-k'

# Reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

# Toggle mouse control, init to off
set -g mouse off
bind C-m set -g mouse

# list of plugins
set -g @plugin 'tmux-plugins/tpm'            # required
set -g @plugin 'tmux-plugins/tmux-resurrect' # saves tmux sessions

# initialize tmux plugin manager
if-shell '[ -r ~/.tmux/plugins/tpm/tpm ]' "run '~/.tmux/plugins/tpm/tpm'"

if-shell '[ -r ~/.tmux.conf.local ]' "source-file ~/.tmux.conf.local"
