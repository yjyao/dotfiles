[user]

name = 'Jy'

[ui]

default-command = 'log'

diff-editor = '_vimdirdiff'
merge-editor = 'vimdiff'

[revsets]

log = "@ | ancestors(immutable_heads().., 2) | heads(immutable_heads())"

[template-aliases]

# Change the looks of `log`, `op_log`, and `show`.
# See https://github.com/martinvonz/jj/blob/main/cli/src/config/templates.toml.

'format_short_id(id)' = 'id.shortest(4)'
# # Do not show commit id in `jj log`.
# 'format_short_commit_id(id)' = ''
# Show author's name instead of their email.
'format_short_signature(signature)' = '''
  if(signature.name(),
     surround("[", "]", signature.name()),
     name_placeholder)
'''
# Show the date. I don't need to know which second in the day.
'format_timestamp(timestamp)' = 'timestamp.format("%F")'

[revset-aliases]

# A new commit that is empty (contains no changes) and has no description.
'bare' = 'empty() & description(exact:"")'

# If @ is non-empty, return @.
# If @ is empty on top of a non-empty parent, return the parent.
# Useful for getting git head or current cl in a clean working directory.
'head' = 'latest(ancestors(@, 2) ~immutable_heads() ~empty(), 1)'

# @ if it has a description else parent.
# This aims to return the targeted change regardless of whether i'm using
# "edit" mode or "working directory" mode.
# Useful for rebasing or interdiffing.
'base' = 'latest(ancestors(@) ~immutable_heads() ~description(exact:""), 1)'

# Non-empty tips from base.
'leaf'  = 'heads(@-::) ~ bare'

# Everything that's mine and local-only or part of a branch that I have checked
# out locally.
'wip()' = 'trunk()..(branches() | (mine() ~ ..remote_branches()))'

[aliases]

d = ['diff']
lg = ['log']
rc = ['config', 'edit', '--user']
changes = ['log', '--no-graph', '-T', 'surround(change_id.short(6), "", "\n")']

# modified files
mf = ['log', '--no-graph', '--name-only', '-T', '', '-r', 'head']
