[user]

name = 'Jy'

[ui]

default-command = 'log'

diff-editor = '_vimdirdiff'
merge-editor = 'vimdiff'

[colors]

"working_copy empty" = "bright white"
"working_copy empty description placeholder" = "bright white"

[revsets]

log = "@ | ancestors(immutable_heads().., 2) | heads(immutable_heads())"

[template-aliases]

# Change the looks of `log`, `op_log`, and `show`.
# See https://github.com/martinvonz/jj/blob/main/cli/src/config/templates.toml.

'format_short_id(id)' = 'id.shortest(4)'
# # Do not show commit id in `jj log`.
# 'format_short_commit_id(id)' = ''
# Show author's name instead of their email.
'format_short_signature(signature)' = '''
  if(signature.name(),
     surround("[", "]", signature.name()),
     name_placeholder)
'''
# Show the date. I don't need to know which second in the day.
'format_timestamp(timestamp)' = 'timestamp.format("%F")'

[revset-aliases]

# A new commit that is empty (contains no changes) and has no description.
'bare' = 'empty() & description(exact:"")'

# First parent with a description.
# This aims to return the targeted change regardless of whether i'm using
# "edit" mode or "working directory" mode.
'base' = 'latest(ancestors(@) ~description(exact:""), 1)'

# The change and the working dir for the change that's currently worked on.
'active' = 'base::@ ~immutable()'

# Everything that's mine and local-only or part of a branch that I have checked
# out locally.
'wip()' = 'trunk()..(branches() | (mine() ~ ..remote_branches()))'

[aliases]

rc = ['util', 'exec', '--', 'bash', '-c', '''
"${EDITOR:-vi}" "${JJ_CONFIG?}"
''', '']

d = ['diff']
lg = ['log']
changes = ['log', '--no-graph', '-T', 'surround(change_id.short(6), "", "\n")']

# modified files
# `jj mf` for modified files at "active".
# `jj mf -r x` for modified files at revset `x`.
mf = ['util', 'exec', '--', 'bash', '-c', '''
[[ $@ =~ -r ]] || eval set -- -r active "$@"
jj diff --name-only "$@" | awk '!seen[$0]++'
''', '']

hud = ['util', 'exec', '--', 'bash', '-c', '''
watch -tcwn.5 '
  jj --no-pager --ignore-working-copy --color always st
  printf " \n"
  jj --no-pager --ignore-working-copy --color always log
'
''', '']
